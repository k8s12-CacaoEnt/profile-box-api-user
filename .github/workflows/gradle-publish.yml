name: Gradle Package

on:
  push:
    branches: [ main ]

env: 
  AWS_REGION: ap-northeast-2
  AWS_ECR_REGISTRY: 204770130849.dkr.ecr.ap-northeast-2.amazonaws.com
  AWS_ECR_REPOSITORY: profile-box-api-user
  IMG_TAG: ${{ github.sha }}
#   EKS_CLUSTER_NAME: education-eks-B7gsMBzN
#   DEPLOYMENT_NAME: dev-front
#   CONTAINER_NAME: demo-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Root Code
      uses: actions/checkout@v3
      with:
        repository: k8s12-CacaoEnt/profilehub
        ref: main
        
    - name: List Files
      run: |
        pwd
        ls -la

    - name: Checkout Sub Code
      uses: actions/checkout@v3
      with:
        repository: k8s12-CacaoEnt/profile-box-api-user
        ref: main
        path: profile-box-api-user
    
    - name: List Files
      run: |
        pwd
        ls -la
        
    - name: Checkout Comm Code
      uses: actions/checkout@v3
      with:
        repository: k8s12-CacaoEnt/profile-box-comm
        ref: main
        path: profile-box-comm
    
    - name: List Files
      run: |
        pwd
        ls -la
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
        
    - name: Build, tag, and push image to Amazon ECR
      run: |
        ls
        pwd
        cd profile-box-api-user
        ls
        pwd
        docker build --no-cache -t ${{ env.AWS_ECR_REGISTRY }}/${{ env.AWS_ECR_REPOSITORY }}:${{env.IMG_TAG}} .
        docker push ${{ env.AWS_ECR_REGISTRY }}/${{ env.AWS_ECR_REPOSITORY }}:${{env.IMG_TAG}}
      

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
#     - name: Publish to GitHub Packages
#       uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#       with:
#         arguments: publish
#       env:
#         USERNAME: ${{ github.actor }}
#         TOKEN: ${{ secrets.GITHUB_TOKEN }}
